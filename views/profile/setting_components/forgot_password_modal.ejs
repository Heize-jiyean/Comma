<style>
    .modal-background {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-container {
        background-color: white;
        width: 460px;
        padding: 12px 20px 40px;
        border-radius: 20px;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        padding: 0px;
        font-size: 20px;
        font-weight: 700;
    }
    .modal-close {
        display: block;
        text-align: right;
    }

    .modal-close button {
        background: none;
        border: none;
        font-size: 30px;
        cursor: pointer;
    }

    .check-code-container {
        margin-top: 20px;
        padding-bottom: 30px;
        display: flex;
        flex-direction: column;
        gap: 12px;
        border-bottom: 1px solid #E4E5EA;;
    }

    .label {
        font-weight: 600;
    }

    .email-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .email-address {
        flex-grow: 1;
        padding: 12px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-sizing: border-box;
        height: 44px;
    }

    .send-email-button {
        padding: 12px 16px;
        background-color: #5FD068;
        color: white;
        font-size: 16px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        height: 44px;
        box-sizing: border-box;
        white-space: nowrap;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .send-email-button:disabled {
        background-color: #E4E5EA;
        color: #A1A4AC;
        cursor: not-allowed;
    }

    .number-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .number-container input {
        flex-grow: 1;
        padding: 12px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 8px;
        box-sizing: border-box;
        height: 44px;
    }

    .submit-number-button {
        padding: 12px 16px;
        background-color: #5FD068;
        color: white;
        font-size: 16px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        height: 44px;
        box-sizing: border-box;
        white-space: nowrap;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .submit-number-button:disabled {
        background-color: #E4E5EA;
        color: #A1A4AC;
        cursor: not-allowed;
    }
    
    .change-password-container {
        margin-top: 20px;
    }

    .hidden {
        display: none;
    }

    .modal-save-button {
        background-color: #5FD068;
        color: white;
        border: none;
        padding: 4px 8px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 5px;
    }

    .modal-save-button:hover {
        background-color: #45a049;
    }

    .modal-save-button:disabled {
        background-color: #E4E5EA;
        color: #A1A4AC;
        cursor: not-allowed;
    }

    
</style>


<div class="modal-background" id="forgotPasswordModal">
    <div class="modal-container">
        <div class="modal-header">
            <div>비밀번호 변경</div>
            <div class="modal-close">
                <button id="closeModalButton">&times;</button>
            </div>
        </div>
        <div class="check-code-container">
            <div class="label">인증번호 확인 후, 비밀번호를 변경할 수 있습니다.</div>
            <div class="email-container">
                <div class="email-address"><%- loginUser.email %></div>
                <button type="button" class="send-email-button" id="sendEmailButton">인증번호 전송</button>
            </div>
            <div class="number-container">
                <input type="text" placeholder="인증번호를 입력하세요." id="numberInput">
                <button type="button" class="submit-number-button" id="submitNumberButton">인증번호 확인</button>
            </div>
        </div>
        <div class="change-password-container hidden" id="changePasswordContainer">
            <div class="label">새로운 비밀번호를 입력하세요.</div>
            <div class="form-group">
                <label for="modalNewPassword">새 비밀번호</label>
                <input type="password" id="modalNewPassword">
                <div id="modalNewPasswordError" class="error">에러!!</div>
            </div>
            <div class="form-group">
                <label for="modalConfirmNewPassword">새 비밀번호 확인</label>
                <input type="password" id="modalConfirmNewPassword">
                <div id="modalConfirmNewPasswordError" class="error">에러!!</div>
            </div>
            <button type="button" class="modal-save-button" id="modalSaveButton" disabled>비밀번호 변경</button>
        </div>
    </div>
</div>

<script>
    const forgotPasswordModal = document.getElementById('forgotPasswordModal');
    const closeModalButton = document.getElementById('closeModalButton');
    const sendEmailButton = document.getElementById('sendEmailButton');
    const numberInput = document.getElementById('numberInput');
    const submitNumberButton = document.getElementById('submitNumberButton');
    let authNum = null;

    const modalNewPassword = document.getElementById('modalNewPassword');
    const modalConfirmNewPassword = document.getElementById('modalConfirmNewPassword');
    const modalSaveButton = document.getElementById('modalSaveButton');

    // 초기 상태에서 인증번호 입력 필드와 버튼 비활성화
    numberInput.disabled = true;
    submitNumberButton.disabled = true;

    // 모달 열기
    document.querySelector('.forgot-password').addEventListener('click', function(event) {
        event.preventDefault();
        forgotPasswordModal.style.display = 'flex';
    });

    // 모달 닫기 버튼 클릭 시
    closeModalButton.addEventListener('click', function() {
        forgotPasswordModal.style.display = 'none';
    });

    // 모달 배경 클릭 시 모달 닫기
    forgotPasswordModal.addEventListener('click', function(event) {
        if (event.target === forgotPasswordModal) {
            forgotPasswordModal.style.display = 'none';
        }
    });

    // 인증번호 전송 버튼 클릭 시
    sendEmailButton.addEventListener('click', function() {
        const email = document.querySelector('.email-address').textContent;

        fetch('/profile/settings/sendEmail', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email: email })
        })
        .then(response => response.json())
        .then(result => {
            if (result.ok) {
                alert('인증번호 전송 완료');
                authNum = result.authNum;
                numberInput.disabled = false;
                submitNumberButton.disabled = false;
            } else {
                alert('인증번호 전송 실패: ' + result.message); // 실패 시 서버에서 받은 에러 메시지 표시
            }
        })
        .catch(error => {
            alert('인증번호 전송 중 오류 발생');
            console.error('Error:', error);
        });
    })

    // 인증번호 확인 버튼 클릭 시 인증번호 검증
    submitNumberButton.addEventListener('click', function() {
        const enteredCode = numberInput.value;

        if (enteredCode == authNum) {
            alert('인증번호가 확인되었습니다.');
            sendEmailButton.disabled = true;
            numberInput.disabled = true;
            submitNumberButton.disabled = true;
            changePasswordContainer.classList.remove('hidden');
            modalNewPassword.disabled = false;
            modalConfirmNewPassword.disabled = false;
        } else {
            alert('인증번호가 일치하지 않습니다.');
        }
    });


    // 새 비밀번호 유효성 검사
    function validateNewPassword() {
        if (modalNewPassword.value.length < 8 || modalNewPassword.value.length > 16) {
            modalNewPasswordError.style.display = 'block';
            modalNewPasswordError.textContent = '비밀번호는 8~16자 사이로 입력해야 합니다.';
            modalSaveButton.disabled = true;
        } else {
            modalNewPasswordError.style.display = 'none';
            updateModalSaveButtonState();
        }
    }

    // 새 비밀번호 확인 유효성 검사
    function validateConfirmNewPassword() {
        if (modalNewPassword.value !== modalConfirmNewPassword.value) {
            modalConfirmNewPasswordError.style.display = 'block';
            modalConfirmNewPasswordError.textContent = '비밀번호가 일치하지 않습니다.';
            modalSaveButton.disabled = true;
        } else {
            modalConfirmNewPasswordError.style.display = 'none';
            updateModalSaveButtonState();
        }
    }

    // 수정완료 버튼을 활성화할지 검사하는 함수
    function updateModalSaveButtonState() {
        modalSaveButton.disabled = 
            modalNewPassword.value.length < 8 || 
            modalNewPassword.value.length > 16 ||
            modalNewPassword.value !== modalConfirmNewPassword.value;
    }

    // input 박스에 뭔가 입력하면 실행됨
    modalNewPassword.addEventListener('input', validateNewPassword);
    modalConfirmNewPassword.addEventListener('input', validateConfirmNewPassword);

    // 수정완료 버튼 눌렀을 때 실행됨
    modalSaveButton.addEventListener('click', function() {
        if (!modalSaveButton.disabled) {
            sendModalDataToServer({
                modalNewPassword: modalNewPassword.value
            })
        }
    })

    // 서버로 데이터 PUT하는 함수
    function sendModalDataToServer(data) {
        fetch('/profile/settings/modalPasswordChange', {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('비밀번호 변경 완료');
                window.location.reload();
            } else {
                alert(data.message);
                window.location.reload();
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    
</script>